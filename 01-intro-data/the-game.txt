 1. What is R?
 2. Running the thing
 3. Vectors and stufz
  -- entering data
  -- copying vectors
  -- indexing vectors
  -- slices
 4. Getting functional
  -- min, max, mean, var, median
 5. Logical extractions and beauty
  -- which
 8. Mathematics

Appendices:
  Installing R
  Entering data into R - c, scan, scan with files, using `edit`
  Sources of help, documentation

 ***

  Здравейте, днес ще си поговорим за това какво е R, как да го използваме и
  кои са основните инструменти на езика.

  Та, R е език за програмиране ориентиран към статистиката. Пълен е с много
  примитиви, които правят лесно решаването на проблеми свързани с данни.
  Проблемите свързани с данни са много важни. Важни са, щото света е пълен с
  неразбиране. Неразбиране защо доматите поскъпват през зимата, неразбиране
  защо в училище трябва да се учи не само математика, неразбиране защо
  понякога пет сървъра може да вършат повече работа от десет...

  R върви на Linux, Windows и Mac. Понеже съм с Debian, ще ви покажа как да го
  инсталирате на такава система. На сайта r-project.org лесно може да намерите
  инструкции за това как да подкарате средата за разработка на друга система.

  Та, в Debian нещата са лесни:
  $ sudo apt-get update
  $ sudo apt-get install r-base r-base-dev

  И после, просто пишем:
  $ R

  и удряме един хубав Enter.

  Вече сме подкарали нашия главен инструмент за изучаване на тази наука
  наречена статистика.

  Нека се научим да работим с вектори. Векторите са последователност от данни.
  В R те се конструират с функцията c(), която просто означава combine. Да,
  малко е тегаво - не е като в другите езици просто да плеснеш едни квадратни
  скоби и всичко да си стане.

  И така, какво правим? Изследваме желанието на Пешо да яде палачинки.
  > pancakes = c(5,4,2,5,6,8,6,8,10,5,7,10) # 12 дни ядене на палачинки
  > pancakes # Нека ги отпечатаме
  > pancakes2 = c(8,11,7,3,9,6,7,12,9,12) # Още 10 дни наслада
  > pancakes = c(pancakes, pancakes2) # Нека ги комбинираме
  
  Хубаво, видяхме как Пешо може да съхранява данни за неговата опустошителна
  производителност. За жалост, Пешо желае да достъпва тия данни.
  > pancakes[2] # Дай втория ден от яденето
  > pancakes[1:7] # Като се замисля, дай първата седмица
  > pancakes[14:21] # Нищо интересно нямаше там... Дай третата
  > funny = pancakes[14:21] # Интересно...
  > funny[3] # Третият елемент се различава доста от останалите
  > funny[-3] # Нека да видим всички от третата седмица, без странния елемент
  > funny[c(2,3,4)] # Нека да видим елементите около третия елемент

  Добре, нека сега видим как може да получим някаква информация за този сет от
  данни.
  > min(pancakes) # Колко най-малко палачинки е ял Пешо?
  > max(pancakes) # А колко най-много?
  > mean(pancakes) # Статистически погледнато, колко палачинки изяжда средно
  + Пешо?
  > var(pancakes) # А с каква дисперсия става това?
  > median(pancakes) # Каква медиана имат тия данни?

  Супер, имахме някакви данни и получихме статистическа информация за тях. За
  жалост, за сега можем да направим малко заключения за нея. Но, поне като я
  гледаме, виждаме, че май употребата на палачинки от страна на Пешо се
  увеличава...

  Понеже ни е неудобно да броим в кой ден колко палачинки е ял Пешо, имайки
  само данните за потреблението, нека си направим втори вектор, който съдържа
  последователност от дни.
  > days = c(1:length(pancakes))
  > days[pancakes == 3] # Сега много лесно можем да видим в кои дни Пешо е ял
  + 3 палачинки

  Естествено, бидейки софтуерни инженери, знаем, че DRY не бива да се нарушава.
  Имаме удобната функция `which`:
  > which(pancakes == 3)

  Но пък ако искаме да сме забавни можем да направим и следното:
  > (1:length(pancakes))[pancakes == 3]

  Не искаме да сме забавни, щото не ни се отдава. Затова, просто ще кажем, че
  синтаксиса <вектор>[<предикат>] взима тия елементи от вектора, които 
  отговарят на предиката. В терминологията на R това се нарича
  `extraction by a logical vector'.

  Сега можем да видим в колко дни Пешо е ял повече от 7 палачинки:
  > sum(pancakes > 7)

  И можем да видим, че за период от 22 дни, Пешо почти е развил диабет.
  > sum(pancakes)

  Защото 160 палачинки съдържат много захар, особено ако се ядат с баклава.

  Като казахме баклава, нека видим колко баклава е ял Пешо през тия 22 дни.
  > baklava = c(1,3,2,3,4,1,2,3,4,1,5,1,2,3,4,1,2,3,4,2,3,3)

  И нека видим каква е разликата в консумираната баклава и консумираните
  палачинки:
  > pancakes - baklava
